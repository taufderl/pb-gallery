= render partial: "edit_tabs"

= form_for [@gallery, @image], :html => { :multipart => true, :id => "fileupload"  } do |f|
  .row.fileupload-buttonbar
    .col-md-8
      %span.btn.btn-success.fileinput-button
        %i.glyphicon.glyphicon-plus
        %span Add files...
        = f.file_field :file
      %button.btn.btn-primary.start{:type => "submit"}
        %i.glyphicon.glyphicon-upload
        %span Start upload
      %button.btn.btn-warning.cancel{:type => "reset"}
        %i.glyphicon.glyphicon-ban-circle
        %span Cancel upload
      %button.btn.btn-danger.delete{:type => "button"}
        %i.glyphicon.glyphicon-trash
        %span Delete
      %input.toggle{:type => "checkbox"}
      %span.fileupload-process
      
    .col-md-4.fileupload-progress.fade
      .progress.progress-striped.active{role: 'progressbar', 'aria-valuemin' => '0', 'aria-valuemax' => '100'}
        .progress-bar.progress-bar-success{:style => "width:0%;"} %span.sr-only
      .progress-extended &nbsp;
  %table.table.table-striped{role: 'presentation'}
    %tbody.files
      
:javascript
  var fileUploadErrors = {
  maxFileSize: 'File is too big',
  minFileSize: 'File is too small',
  acceptFileTypes: 'Filetype not allowed',
  maxNumberOfFiles: 'Max number of files exceeded',
  uploadedBytes: 'Uploaded bytes exceed file size',
  emptyResult: 'Empty file upload result'
  };
  
  
// The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-upload fade">
  <td class="preview"><span class="fade"></span></td>
  <td class="name"><span>{%=file.name%}</span></td>
  <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
  {% if (file.error) { %}
  <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
  {% } else if (o.files.valid && !i) { %}
  <td>
  <div class="progress progress-success progress-striped active"><div class="bar" style="width:0%;"></div></div>
  </td>
  <td class="start">{% if (!o.options.autoUpload) { %}
  <button class="btn btn-primary">
  <i class="icon-upload icon-white"></i>
  <span>{%=locale.fileupload.start%}</span>
  </button>
  {% } %}</td>
  {% } else { %}
  <td colspan="2"></td>
  {% } %}
  <td class="cancel">{% if (!i) { %}
  <button class="btn btn-warning">
  <i class="icon-ban-circle icon-white"></i>
  <span>{%=locale.fileupload.cancel%}</span>
  </button>
  {% } %}</td>
  </tr>
  {% } %}
  
// The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-download fade">
  {% if (file.error) { %}
  <td></td>
  <td class="name"><span>{%=file.name%}</span></td>
  <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
  {% } else { %}
  <td class="preview">{% if (file.thumbnail_url) { %}
  <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
  {% } %}</td>
  <td class="name">
  <a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
  </td>
  <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
  <td colspan="2"></td>
  {% } %}
  <td class="delete">
  <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
  <i class="icon-trash icon-white"></i>
  <span>{%=locale.fileupload.destroy%}</span>
  </button>
  <input type="checkbox" name="delete" value="1">
  </td>
  </tr>
  {% } %}
  
%script{:charset => "utf-8", :type => "text/javascript"}
  $(function () {
  // Initialize the jQuery File Upload widget:
  $('#fileupload').fileupload();

  // Load existing files:
  $.getJSON($('#fileupload').prop('action'), function (files) {
  var fu = $('#fileupload').data('blueimpFileupload'), template;
  fu._adjustMaxNumberOfFiles(-files.length);
  console.log(files);
  template = fu._renderDownload(files).appendTo($('#fileupload .files'));

  // Force reflow:
  fu._reflow = fu._transition && template.length && template[0].offsetWidth;
  template.addClass('in');
  $('#loading').remove();
  });
  });
